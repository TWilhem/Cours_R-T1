name: Update Files

# on:
#   schedule:
#     - cron: '0 12 * * 5'

on:
  push:
    branches:
      - main

jobs:
  update_files:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get all files in 1er Semestre
      id: get-files
      run: |
        files=$(find ./1er\ Semestre -type f | tr '\n' '|')
        echo "all_files=${files%|}" >> $GITHUB_OUTPUT

    - name: Process files
      id: process-files
      run: |
        Fichier=()
        NonFichier=()
        
        IFS='|' read -ra files <<< "${{ steps.get-files.outputs.all_files }}"
        for file in "${files[@]}"; do
          if [[ "$file" != *"README.md" ]]; then
            if [ -f "$(dirname "$(dirname "$file")")/README.md" ]; then
              Fichier+=("$file")
            else
              NonFichier+=("$file")
            fi
          else
            NonFichier+=("$file")
          fi
        done
        
        if [ ${#Fichier[@]} -gt 0 ]; then
          echo "Tous les fichiers à traiter :"
          printf '%s\n' "${Fichier[@]}"
          echo "fichier_count=${#Fichier[@]}" >> $GITHUB_OUTPUT 
        else
          echo "Aucun fichier à traiter."
        fi
        
        if [ ${#NonFichier[@]} -gt 0 ]; then
          echo "Fichiers non traités :"
          printf '%s\n' "${NonFichier[@]}"
        fi

    # - name: Update README files
    #   if: steps.process-files.outputs.fichier_count > 0
    #   run: |
    #     update_readme() {
    #       local file="$1"
    #       local readme_file="$(dirname "$file")/README.md"
    #       local filename=$(basename "$file")
    #       local file_type=""
          
    #       if [[ "$filename" == CM* ]]; then
    #         file_type="CM"
    #       elif [[ "$filename" == TD* ]]; then
    #         file_type="TD"
    #       elif [[ "$filename" == TP* ]]; then
    #         file_type="TP"
    #       else
    #         file_type="Autre"
    #       fi
          
    #       if [ -f "$readme_file" ]; then
    #         sed -i "/^## $file_type$/a - [$filename](./$filename)" "$readme_file"
    #       fi
    #     }
        
    #     IFS='|' read -ra files <<< "${{ steps.get-files.outputs.all_files }}"
    #     for file in "${files[@]}"; do
    #       if [[ "$file" != *"README.md" ]]; then
    #         update_readme "$file"
    #       fi
    #     done

    # - name: Commit changes
    #   if: steps.process-files.outputs.fichier_count > 0
    #   run: |
    #     git config --local user.email "action@github.com"
    #     git config --local user.name "GitHub Action"
    #     git add .
    #     git diff --quiet && git diff --staged --quiet || git commit -m "Mise à jour automatique des fichiers README"
    #     git push